{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    "target": "es6",                                /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "esnext",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "moduleResolution": "node",
    "lib": ["dom", "esnext"],                                   /* Specify library files to be included in the compilation. */
    "baseUrl": ".",
    "outDir": "./dist",                              /* Redirect output structure to the directory. */
    "typeRoots": [
      "./node_modules/@types/", 
      "./types"
    ],
    "strict": true,                                 /* Enable all strict type-checking options. */
    "strictBindCallApply": false,                   /* 禁用函数对象的bind,call和apply方法是强类型的，并进行严格检测。 */

    "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    /* Experimental Options */
    "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true,                           /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */
  },

  "include": [
    "src/**/*.ts",
    "types/**/*.d.ts"
  ],
  
  "exclude": ["node_modules", "dist", "**/*.js"]
}
